[ source $CASA_SRC ]
  brainvisa opensource $CASA_BRANCH
  brainvisa brainvisa-installer $CASA_BRANCH
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  - communication:web
[ endif ]

[ build $CASA_BUILD ]
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  cmake_options = -DBRAINVISA_CROSSCOMPILATION_DIR=$CASA_DEPS
[ if os.getenv('WINEARCH') == 'win32' ]
  cross_compiling_prefix = i686-w64-mingw32
[ else ]
[if os.getenv('WINEARCH') == 'win64' ]
  cross_compiling_prefix = x86_64-w64-mingw32
[ endif ]
[ endif ]
[ endif ]
  default_steps = configure build doc
  make_options = -j4
  build_type = Release
  packaging_thirdparty = ON
  clean_config = ON
  clean_build = ON
  test_ref_data_dir = $CASA_TESTS/ref
  test_run_data_dir = $CASA_TESTS/test
  brainvisa opensource $CASA_BRANCH $CASA_SRC
  brainvisa brainvisa-installer $CASA_BRANCH $CASA_SRC
  - morphologist-ui
  - morphologist
  - nuclear_imaging
  - connectomist
  - cortical_surface
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  - communication:web
[ endif ]

[ build $CASA_CUSTOM_BUILD ]
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  cmake_options = -DBRAINVISA_CROSSCOMPILATION_DIR=$CASA_DEPS
[ if os.getenv('WINEARCH') == 'win32' ]
  cross_compiling_prefix = i686-w64-mingw32
[ else ]
[if os.getenv('WINEARCH') == 'win64' ]
  cross_compiling_prefix = x86_64-w64-mingw32
[ endif ]
[ endif ]
[ endif ]
  make_options = -j4
  build_type = Release
  clean_config = ON
  clean_build = ON
  test_ref_data_dir = $CASA_TESTS/custom_ref
  test_run_data_dir = $CASA_TESTS/custom_test
  directory $CASA_CUSTOM_SRC/custom_project

[ package $CASA_PACK/data/packages ]
  build_directory = $CASA_BUILD
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  packaging_options = --data --platform-target $WINEARCH --make-options \"-j4\"
[ else ]
  packaging_options = --data --make-options \"-j4\"
[ endif ]
  directory_id = data_packages
  init_components_from_build_dir = OFF
#   default_steps = pack
  brainvisa-share $CASA_BRANCH $CASA_SRC
#   sulci-models $CASA_BRANCH $CASA_SRC

[ package $CASA_PACK/software/packages ]
  build_directory = $CASA_BUILD
[ if os.getenv('WINEARCH') in ('win32', 'win64') ]
  packaging_options = --online-only --binary-creator-cmd $CASA_DEPS/bin/binarycreator.exe --platform-target $WINEARCH --make-options \"-j4\"
  installer_filename = $CASA_PACK/brainvisa-installer/brainvisa_installer-%(version)s-%(os)s-%(online)s.exe
[ else ]
  packaging_options = --online-only --make-options \"-j4\"
  installer_filename = $CASA_PACK/brainvisa-installer/brainvisa_installer-%(version)s-%(os)s-%(online)s
[ endif ]
  data_repos_dir = $CASA_PACK/data/packages
  test_install_dir = $CASA_INSTALL/brainvisa-test
#   default_steps = pack install_pack test_pack
  remote_test_host_cmd = ssh -X localhost $CASA_HOST_DIR/run_docker_test.sh -X11 -d -e BRAINVISA_TESTS_DIR=$BRAINVISA_TESTS_DIR -e BRAINVISA_TEST_REF_DATA_DIR=$BRAINVISA_TEST_REF_DATA_DIR -e BRAINVISA_TEST_RUN_DATA_DIR=$BRAINVISA_TEST_RUN_DATA_DIR -e TMPDIR=/casa/install/tmp -- xvfb-run --auto-servernum
  test_ref_data_dir = $CASA_TESTS/ref
  test_run_data_dir = $CASA_TESTS/test
  - communication
  - brainvisa-share
